// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  company   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  integrations Integration[]
  cashflowData CashflowData[]
  liquidityBuffers LiquidityBuffer[]
  forecasts Forecast[]
  alerts Alert[]

  @@map("users")
}

model Integration {
  id        String   @id @default(cuid())
  userId    String
  type      String   // STRIPE, QUICKBOOKS, PAYPAL, SQUARE
  config    String   // JSON string
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("integrations")
}

model CashflowData {
  id          String   @id @default(cuid())
  userId      String
  date        DateTime
  amount      Float
  type        String   // INCOME, EXPENSE, TRANSFER
  category    String?
  description String?
  source      String
  metadata    String?  // JSON string
  createdAt   DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("cashflow_data")
}

model LiquidityBuffer {
  id          String   @id @default(cuid())
  userId      String
  amount      Float
  requestedAt DateTime @default(now())
  approvedAt  DateTime?
  repaidAt    DateTime?
  status      String   @default("PENDING") // PENDING, APPROVED, ACTIVE, REPAID, DECLINED
  dueDate     DateTime
  apr         Float @default(0.0)
  notes       String?

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("liquidity_buffers")
}

model Forecast {
  id          String   @id @default(cuid())
  userId      String
  date        DateTime
  predictedAmount Float
  confidence   Float
  modelVersion String
  createdAt   DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("forecasts")
}

model Alert {
  id        String   @id @default(cuid())
  userId    String
  type      String   // CASHFLOW_LEAK, FORECAST_SHORTFALL, BUFFER_DUE, INTEGRATION_ERROR, ANOMALY_DETECTED
  message   String
  severity  String   // LOW, MEDIUM, HIGH, CRITICAL
  isRead    Boolean  @default(false)
  metadata  String?  // JSON string
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("alerts")
} 